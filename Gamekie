<!DOCTYPE html>
<html>
<head>
  <title>Puzzle Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      padding: 20px;
    }
    #game-container {
      margin: 20px auto;
    }
    #puzzle-container {
      display: grid;
      gap: 5px;
      justify-content: center;
      margin-bottom: 20px;
    }
    .tile {
      width: 60px;
      height: 60px;
      background: #4CAF50;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      cursor: pointer;
      border-radius: 5px;
      font-size: 18px;
    }
    .empty {
      background: #ccc;
      cursor: default;
    }
    #controls {
      margin: 10px 0;
    }
    select, button {
      padding: 8px 12px;
      font-size: 16px;
      margin: 5px;
    }
    #timer {
      font-weight: bold;
      margin-bottom: 10px;
    }
    #message {
      font-size: 18px;
      color: green;
    }
  </style>
</head>
<body>

  <h2>Sliding Puzzle Game</h2>
  <div id="controls">
    Difficulty: 
    <select id="difficulty">
      <option value="3">Easy (3x3)</option>
      <option value="4" selected>Medium (4x4)</option>
      <option value="5">Hard (5x5)</option>
    </select>
    <button onclick="startGame()">Start Game</button>
  </div>

  <div id="timer">Time: 0s</div>
  <div id="game-container">
    <div id="puzzle-container"></div>
    <div id="message"></div>
  </div>

  <script>
    let size = 4;
    let tiles = [];
    let container = document.getElementById("puzzle-container");
    let timerDisplay = document.getElementById("timer");
    let message = document.getElementById("message");
    let interval;
    let time = 0;

    function startGame() {
      clearInterval(interval);
      size = parseInt(document.getElementById("difficulty").value);
      container.style.gridTemplateColumns = `repeat(${size}, 60px)`;
      message.textContent = "";
      time = 0;
      timerDisplay.textContent = "Time: 0s";
      interval = setInterval(() => {
        time++;
        timerDisplay.textContent = `Time: ${time}s`;
      }, 1000);
      createTiles();
    }

    function createTiles() {
      let nums = [...Array(size * size - 1).keys()].map(n => n + 1);
      nums = nums.sort(() => Math.random() - 0.5);
      nums.push(null);

      container.innerHTML = "";
      tiles = [];

      nums.forEach((num, i) => {
        const div = document.createElement("div");
        div.textContent = num || "";
        div.className = num ? "tile" : "tile empty";
        div.addEventListener("click", () => moveTile(i));
        tiles.push(div);
        container.appendChild(div);
      });
    }

    function moveTile(index) {
      const emptyIndex = tiles.findIndex(tile => tile.classList.contains("empty"));
      if (isAdjacent(index, emptyIndex)) {
        [tiles[index].textContent, tiles[emptyIndex].textContent] =
        [tiles[emptyIndex].textContent, tiles[index].textContent];
        [tiles[index].className, tiles[emptyIndex].className] =
        [tiles[emptyIndex].className, tiles[index].className];

        if (checkWin()) {
          clearInterval(interval);
          message.textContent = `You Win! Time: ${time}s`;
          setTimeout(() => {
            if (size < 5) {
              document.getElementById("difficulty").value = size + 1;
              startGame();
            } else {
              alert("You completed all levels!");
            }
          }, 1500);
        }
      }
    }

    function isAdjacent(i1, i2) {
      const row1 = Math.floor(i1 / size), col1 = i1 % size;
      const row2 = Math.floor(i2 / size), col2 = i2 % size;
      return (Math.abs(row1 - row2) + Math.abs(col1 - col2)) === 1;
    }

    function checkWin() {
      for (let i = 0; i < tiles.length - 1; i++) {
        if (tiles[i].textContent != (i + 1)) return false;
      }
      return tiles[tiles.length - 1].textContent === "";
    }

    startGame();
  </script>
</body>
</html>
